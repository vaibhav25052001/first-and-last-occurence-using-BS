class Solution {
    private:
    void firstoccurence(vector<int>&ans,vector<int>&nums,int target){
        int s=0,e=nums.size()-1;
        int mid=s+(e-s)/2;
        int ans1=-1;
        while(s<=e){
            if(nums[mid]==target){
                ans1=mid;
                e=mid-1;
            }
            else if(nums[mid]<target)
            s=mid+1;
            else
            e=mid-1;

            mid=s+(e-s)/2;
        }
        ans.push_back(ans1);
    }

    void lastoccurence(vector<int>&ans,vector<int>&nums,int target){
        int s=0,e=nums.size()-1;
        int mid=s+(e-s)/2;
        int ans1=-1;
        while(s<=e){
            if(nums[mid]==target){
                ans1=mid;
                s=mid+1;
            }
            else if(nums[mid]<target)
            s=mid+1;
            else
            e=mid-1;

            mid=s+(e-s)/2;
        }
        ans.push_back(ans1);
    }
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>ans;
        firstoccurence(ans,nums,target);
        lastoccurence(ans,nums,target);

        return ans;
    }
};
